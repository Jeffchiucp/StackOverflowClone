<div class="post-show {{currentClass}}">

  <style>
    .delete-form {
        display: none;
    }

    .post-show.is-author .delete-form {
        display: block;
    }
  </style>


  <!-- post-show -->
  <div id="post-content">
      <h2 id="post-title">{{post.title}}</h3> <br>

      <div id="post-detail">
        <p>{{{post.detail}}}</p> <br> <br>
      </div>

      <div id="post-map">
          <input id="address" type="textbox" value='{{post.location}}'>
          <div id ='map' style="height: 250px; width: 250px;"></div>
          <p class="post-location">Location: {{post.location}}</p>
          <p class="post-date">Date: {{post.createdAt}}</p>
          <p class="post-author">Author: {{post.author.username}}</p>
      </div>
  </div>

  <form method="POST" action="/posts/{{post._id}}?_method=DELETE">
    <p class="delete-form"><button type="submit" class="btn btn-danger">Delete</button></p>
  </form>



  <form action="/posts/{{post._id}}/answer" method="post">
      <textarea class='form-control' name="content" placeholder="Comment"></textarea>
      <div class="text-right" id="save-btn">
        <button type="submit" class="btn btn-primary">Save</button>
      </div>
  </form>

  <h2>Answers</h2>
  <div id="error">Errorbox</div>
  {{#each post.answers}}
      <div class="answer">
          <div class="answer-scoring">
              <form class="vote-up" data-id="{{this._id}}">
                  <div id="vote-up" class="submit-button"></div>
              </form>
              <p id="answer-{{this._id}}" class="answer-score">{{this.voteScore}}</p>
              <form class="vote-down" data-id="{{this._id}}">
                  <div id="vote-down" class="submit-button"></div>
              </form>
          </div>
          <div class="answer-content">
              <p class="content-text">{{this.content}}</p>
              <div class="content-small">
                  <p class="content-author">{{this.author.username}}</p>
                  <p class="content-date">{{this.author.createdAt}}</p>
                  <form method="POST" action="/posts/{{../post._id}}/{{this.id}}?_method=DELETE">
                    <p class="delete-form"><button type="submit" class="btn btn-sm btn-danger">Delete</button></p>
                  </form>
              </div>
          </div>
      </div>
  {{/each}}


</div>
<script rel="script" src="/js/posts.js"></script>

<script async defer
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA098tlCp-gUAnSgWAst8CXHWX2VYblE-o&callback=initMap">
</script>
<script type="text/javascript">
  function initMap() {
      var map = new google.maps.Map(document.getElementById('map'), {
        zoom: 11,
        center: {lat: 37.773972, lng: -122.431297}
      });
      var geocoder = new google.maps.Geocoder();
      let infowindow = new google.maps.InfoWindow()

      geocodeAddress(geocoder, map, infowindow)


      $.get("/post-maps", function( data ) {
          for (let row in data ){
              geocoder.geocode({'address': data[row].location}, (results, status) =>{
                  if (status === 'OK'){
                      let marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location,
                        id: data[row]._id,
                        title: data[row].title,
                        detail: data[row].detail

                      });
                      marker.addListener('click', function() {
                          infowindow.close()
                          infowindow.setContent(
                            '<a style="text-decoration: none;" href=/posts/'+$(this).attr("id")+'>'+
                                '<h1 style="font-size: 12pt;">'+$(this).attr('title') + '</h1>'+
                            '</a>')
                          infowindow.open(map, marker)
                        //   window.location.replace("/posts/"+$(this).attr("id"))
                      });


                  } else{
                      console.log("Something happened " + status)
                  }
              })
          }
        });

        // content =
        // '<h1>'+ data[row].title +'</h1>'+
        // '<p>'+ data[row].detail +'</p>'
        //
        //
        // marker.addListener('click', function() {
        //       infowindow.setContent(content)
        //       infowindow.open(map, marker);
        //   });


    }

  function geocodeAddress(geocoder, resultsMap, infowindow) {
      var address = document.getElementById('address').value;
      geocoder.geocode({'address': address}, function(results, status) {
        if (status === 'OK') {
          resultsMap.setCenter(results[0].geometry.location);
          var marker = new google.maps.Marker({
            map: resultsMap,
            position: results[0].geometry.location
          });
          marker.addListener('click', function() {
              infowindow.close()
              infowindow.setContent('<h1 style="font-size: 12pt;">Current question!</h1>')
              infowindow.open(map, marker)
            //   window.location.replace("/posts/"+$(this).attr("id"))
          });
        } else {
          alert('Geocode was not successful for the following reason: ' + status);
        }
      });
    }
</script>
